from web3 import Web3
from pooler.modules.uniswapv3 import settings

from pooler.modules.uniswapv3.settings.config import settings as worker_settings
from pooler.utils.default_logger import logger
from pooler.utils.file_utils import read_json_file
from pooler.utils.rpc import RpcHelper

max_gas_static_call = 30_000_000_000

MIN_TICK = int(-887272)
MAX_TICK = -MIN_TICK

UNISWAPV3_FEE_DIV = 1000000
# https://github.com/getjiggy/evm-helpers
univ3_helper_bytecode = "0x6080604052600436101561001257600080fd5b60003560e01c639c4c90fc1461002757600080fd5b346106dd5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106dd5760043573ffffffffffffffffffffffffffffffffffffffff811681036106dd5760243560020b602435036106dd5760443560020b604435036106dd577fd0c93a7c00000000000000000000000000000000000000000000000000000000608052602060806004608073ffffffffffffffffffffffffffffffffffffffff85165afa80156106ea57600090610ad2575b60443560020b60243560020b13610a74577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860243560020b121580610a62575b15610a04577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000602435600290810b60443590910b03908112627fffff909113176102cb57627fffff602435600290810b604435820b03900b6001019081137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000909112176102cb576101c881600160243560020b60443560020b0360020b01610b4c565b60020b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061020f6101f984610bd8565b936102076040519586610b0b565b808552610bd8565b01366020840137600061022482602435610b4c565b60020b60081d60010b9361023a83604435610b4c565b60020b60081d60010b945b858160010b136106f6576040517f5339c2960000000000000000000000000000000000000000000000000000000081528160010b600482015260208160248173ffffffffffffffffffffffffffffffffffffffff87165afa9081156106ea576000916106b3575b50805b6102fa5750617fff8160010b146102cb57600190810b01610245565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8060ff6fffffffffffffffffffffffffffffffff8216156106a75750607f5b67ffffffffffffffff83161561069d5760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc081831601116102cb5760ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0015b63ffffffff8316156106935760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081831601116102cb5760ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b61ffff8316156106895760ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff081831601116102cb5760ff167ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0015b60ff83161561067f5760ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff881831601116102cb5760ff167ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8015b600f8316156106755760ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81831601116102cb5760ff167ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc015b60038316156106695760ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81831601116102cb577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff6001921601925b16610611575b600160ff831690811b919091189190600287810b91810b600886901b820b17810b919091029081900b036102cb5760243560020b8660020b60ff831660020b8560081b60020b1760020b0260020b1215806105e9575b6105b2575b50806102af565b9381906105e36105c182610bf0565b9660ff8960020b911660020b8660081b60020b1760020b0260020b9189610c1d565b526105ab565b5060443560020b8660020b60ff831660020b8560081b60020b1760020b0260020b13156105a6565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81831601116102cb5760ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190610550565b9160019060021c61054a565b9160041c916104eb565b9160081c91610490565b9160101c91610435565b9160201c916103d9565b9160401c9161037b565b91508060801c91610319565b90506020813d6020116106e2575b816106ce60209383610b0b565b810103126106dd5751386102ac565b600080fd5b3d91506106c1565b6040513d6000823e3d90fd5b50908361070282610bd8565b926107106040519485610b0b565b82845261071c83610bd8565b60005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820181106109d057505060005b838110610823578460405160208101916020825280518093526040820192602060408260051b8501019201906000945b81861061078a5784840385f35b9091927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858203018252835180519081835260005b82811061080e575050602080837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85600085809860019a010152011601019501920195019491909161077d565b806020809284010151828287010152016107bf565b61082d8184610c1d565b5160020b90604051917ff30dba9300000000000000000000000000000000000000000000000000000000835260048301526101008260248173ffffffffffffffffffffffffffffffffffffffff87165afa9182156106ea57600092610924575b506108988185610c1d565b516040519260801b602084015260e81b60308301526013825281604081011067ffffffffffffffff6040840111176108f5578160406108f093016040526108df8288610c1d565b526108ea8187610c1d565b50610bf0565b61074d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b909150610100813d610100116109c8575b816109436101009383610b0b565b810103126106dd5780516fffffffffffffffffffffffffffffffff8116036106dd5760208101519081600f0b82036106dd5760808101518060060b036106dd5760a081015173ffffffffffffffffffffffffffffffffffffffff8116036106dd5760c081015163ffffffff8116036106dd5760e00151801515036106dd57908661088d565b3d9150610935565b6020816060827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0948a01015201905061071f565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f7469636b206f7574206f662072616e67650000000000000000000000000000006044820152fd5b50620d89e860443560020b1315610125565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f66726f6d7469636b203e20746f7469636b0000000000000000000000000000006044820152fd5b5060203d602011610b04575b80610aec6020926080610b0b565b126106dd576080518060020b8103156100e557600080fd5b503d610ade565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176108f557604052565b60020b9060020b908115610ba9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008214166102cb570590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b67ffffffffffffffff81116108f55760051b60200190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146102cb5760010190565b8051821015610c315760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122021a0cb19175e38fac75f1f4cead70601985274c34520f27293f6f2f293f91ac064736f6c63430008130033"

constants_logger = logger.bind(module="PowerLoom|Uniswap|Constants")
# Getting current node

rpc_helper = RpcHelper()
current_node = rpc_helper.get_current_node()

# LOAD ABIs
pair_contract_abi = read_json_file(
    worker_settings.uniswap_contract_abis.pair_contract,
    constants_logger,
)
erc20_abi = read_json_file(
    worker_settings.uniswap_contract_abis.erc20,
    constants_logger,
)
router_contract_abi = read_json_file(
    worker_settings.uniswap_contract_abis.router,
    constants_logger,
)
uniswap_trade_events_abi = read_json_file(
    worker_settings.uniswap_contract_abis.trade_events,
    constants_logger,
)
factory_contract_abi = read_json_file(
    worker_settings.uniswap_contract_abis.factory,
    constants_logger,
)

# load helper abi
helper_contract_abi = read_json_file(
    "pooler/tests/static/abi/UniV3Helper.json",
)

override_address = Web3.to_checksum_address("0x" + "1" * 40)

helper_contract = current_node['web3_client'].eth.contract(
    address=Web3.to_checksum_address(
        override_address), abi=helper_contract_abi)

# Init Uniswap V2 Core contract Objects
router_contract_obj = current_node["web3_client"].eth.contract(
    address=Web3.to_checksum_address(
        worker_settings.contract_addresses.uniswap_v3_router,
    ),
    abi=router_contract_abi,
)
factory_contract_obj = current_node["web3_client"].eth.contract(
    address=Web3.to_checksum_address(
        worker_settings.contract_addresses.uniswap_v3_factory,
    ),
    abi=factory_contract_abi,
)
dai_eth_contract_obj = current_node["web3_client"].eth.contract(
    address=Web3.to_checksum_address(
        worker_settings.contract_addresses.DAI_WETH_PAIR,
    ),
    abi=pair_contract_abi,
)
usdc_eth_contract_obj = current_node["web3_client"].eth.contract(
    address=Web3.to_checksum_address(
        worker_settings.contract_addresses.USDC_WETH_PAIR,
    ),
    abi=pair_contract_abi,
)
eth_usdt_contract_obj = current_node["web3_client"].eth.contract(
    address=Web3.to_checksum_address(
        worker_settings.contract_addresses.USDT_WETH_PAIR,
    ),
    abi=pair_contract_abi,
)

# 1 inch quoter
quoter_1inch_contract_abi = read_json_file(
    "pooler/modules/uniswapv3/static/abis/OneInchQuoter.json",
)

quoter_1inch_contract_obj = current_node["web3_client"].eth.contract(
    address=Web3.to_checksum_address(
        worker_settings.contract_addresses.QUOTER_1INCH),
    abi=quoter_1inch_contract_abi
    )

# FUNCTION SIGNATURES and OTHER CONSTANTS
UNISWAP_TRADE_EVENT_SIGS = {
    "Swap": "Swap(address,address,int256,int256,uint160,uint128,int24)",
    "Mint": "Mint(address,address,int24,int24,uint128,uint256,uint256)",
    "Burn": "Burn(address,int24,int24,uint128,uint256,uint256)",
}
UNISWAP_EVENTS_ABI = {
    "Swap": usdc_eth_contract_obj.events.Swap._get_event_abi(),
    "Mint": usdc_eth_contract_obj.events.Mint._get_event_abi(),
    "Burn": usdc_eth_contract_obj.events.Burn._get_event_abi(),
}
tokens_decimals = {
    "USDT": 6,
    "DAI": 18,
    "USDC": 6,
    "WETH": 18,
}
